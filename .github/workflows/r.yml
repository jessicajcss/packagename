name: R

on:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  generate-data:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-latest, r: 'release'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@main
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@main

      # Debugging Step: Check for Merge Conflicts
      - name: Check for Merge Conflicts in DESCRIPTION
        run: |
          if grep -q '<<<<<<<' DESCRIPTION; then
            echo "Merge conflict detected in DESCRIPTION!"
            exit 1
          fi
        shell: bash

      # Debugging Step: Display the DESCRIPTION file
      - name: Print DESCRIPTION file
        run: cat DESCRIPTION || echo "No DESCRIPTION file found!"
        shell: bash

      # Remove Cached Dependencies (Prevents issues with corrupted files)
      - name: Remove cached dependencies
        run: rm -rf ${{ env.R_LIBS_USER }}
        shell: bash

      - name: Query dependencies
        run: |
          install.packages('remotes')
          install.packages('sessioninfo')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      # Install Dependencies (Including Required Packages)
      - name: Install dependencies
        run: |
          install.packages(c(
            "shiny", "shinydashboard", "shinythemes", "shinycssloaders", "jsonlite", "DT",
            "data.table", "leaflet", "leaflegend", "Hmisc", "corrplot", "PerformanceAnalytics",
            "ggplot2", "RColorBrewer", "tidyverse", "devtools", "openair", "openairmaps",
            "dplyr", "zoo", "plotly", "httr"
          ), dependencies = TRUE)
          remotes::install_deps(dependencies = TRUE, upgrade = "always", force = TRUE)
        shell: Rscript {0}

      # Debugging Step: Check Installed Packages
      - name: Debug Installed Packages
        run: |
          installed.packages()
          sessionInfo()
          list.files(".")
          cat(readLines("DESCRIPTION"), sep = "\n")
        shell: Rscript {0}

      - name: Generate data
        run: |
          source("R/job.R")
        shell: Rscript {0}

      - name: Commit files
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add --all
          git commit -am "add data"
          git push

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
